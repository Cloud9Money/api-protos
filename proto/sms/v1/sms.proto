syntax = "proto3";

package sms.v1;

option go_package = "github.com/Cloud9Money/api-protos/proto/sms/v1;smsv1";

// SMSService provides SMS sending capabilities
service SMSService {
  // SendSMS sends a standard SMS message
  rpc SendSMS(SendSMSRequest) returns (SendSMSResponse);

  // SendOTP sends a one-time password via SMS
  rpc SendOTP(SendOTPRequest) returns (SendSMSResponse);

  // SendTransactionAlert sends transaction notification via SMS
  rpc SendTransactionAlert(SendTransactionAlertRequest) returns (SendSMSResponse);

  // SendBulkSMS sends SMS to multiple recipients
  rpc SendBulkSMS(SendBulkSMSRequest) returns (SendBulkSMSResponse);

  // VerifyOTP verifies an OTP code
  rpc VerifyOTP(VerifyOTPRequest) returns (VerifyOTPResponse);

  // SendTemplateSMS sends an SMS using a predefined template
  rpc SendTemplateSMS(SendTemplateSMSRequest) returns (SendSMSResponse);

  // GetSMSStatus retrieves the status of a sent SMS
  rpc GetSMSStatus(GetSMSStatusRequest) returns (SMSStatus);

  // ListSMS lists sent SMS messages with filtering
  rpc ListSMS(ListSMSRequest) returns (ListSMSResponse);
}

// SendSMSRequest contains data for sending a standard SMS
message SendSMSRequest {
  string to = 1;                  // Recipient phone number (E.164 format)
  string message = 2;             // SMS message content (max 160 chars for single SMS)
  string from = 3;                // Sender ID (optional, uses default)
  string jurisdiction = 4;        // Jurisdiction code (KE, UG, TZ)
  int32 priority = 5;             // Message priority (0=normal, 1=high)
}

// SendOTPRequest sends one-time password
message SendOTPRequest {
  string to = 1;                  // Recipient phone number
  string otp_code = 2;            // OTP code (usually 6 digits)
  int32 expiry_minutes = 3;       // OTP expiry time in minutes
  string purpose = 4;             // Purpose (login, transaction, verification)
  string jurisdiction = 5;        // Jurisdiction code
}

// SendTransactionAlertRequest sends transaction notification
message SendTransactionAlertRequest {
  string to = 1;                  // Recipient phone number
  string transaction_type = 2;    // Type (credit, debit, transfer)
  double amount = 3;              // Transaction amount
  string currency = 4;            // Currency code (KES, UGX, TZS)
  string recipient_name = 5;      // Recipient name (for transfers)
  double balance = 6;             // New balance after transaction
  string jurisdiction = 7;        // Jurisdiction code
}

// SendBulkSMSRequest sends SMS to multiple recipients
message SendBulkSMSRequest {
  repeated string to = 1;         // List of recipient phone numbers
  string message = 2;             // SMS message content
  string from = 3;                // Sender ID (optional)
  string jurisdiction = 4;        // Jurisdiction code
  int32 priority = 5;             // Message priority
}

// VerifyOTPRequest verifies OTP code
message VerifyOTPRequest {
  string phone_number = 1;        // Phone number OTP was sent to
  string otp_code = 2;            // OTP code to verify
  string purpose = 3;             // Purpose (must match original)
}

// SendSMSResponse contains result of SMS sending
message SendSMSResponse {
  string message_id = 1;          // Unique message ID from SMS provider
  bool success = 2;               // Whether SMS was sent successfully
  string error = 3;               // Error message if failed
  string status = 4;              // SMS status (queued, sent, failed, delivered)
  int64 timestamp = 5;            // Unix timestamp of response
  double cost = 6;                // Cost in provider's currency
}

// SendBulkSMSResponse contains result of bulk SMS sending
message SendBulkSMSResponse {
  int32 total_sent = 1;           // Total messages sent
  int32 total_failed = 2;         // Total messages failed
  repeated SMSResult results = 3; // Individual results per recipient
  double total_cost = 4;          // Total cost
}

// SMSResult contains result for individual SMS in bulk send
message SMSResult {
  string to = 1;                  // Recipient phone number
  string message_id = 2;          // Message ID
  bool success = 3;               // Success status
  string error = 4;               // Error message if failed
}

// VerifyOTPResponse contains OTP verification result
message VerifyOTPResponse {
  bool valid = 1;                 // Whether OTP is valid
  bool expired = 2;               // Whether OTP has expired
  string error = 3;               // Error message if verification failed
  int32 attempts_remaining = 4;   // Remaining verification attempts
}

// SendTemplateSMSRequest sends SMS using a template
message SendTemplateSMSRequest {
  string to = 1;                  // Recipient phone number
  string from = 2;                // Sender ID (optional)
  string template_name = 3;       // Template identifier
  map<string, string> template_data = 4; // Template variables
  string jurisdiction = 5;        // Jurisdiction code
}

// GetSMSStatusRequest retrieves SMS status
message GetSMSStatusRequest {
  string message_id = 1;          // Message ID to query
}

// SMSStatus contains SMS delivery status
message SMSStatus {
  string message_id = 1;          // Unique message ID
  string recipient = 2;           // Recipient phone number
  string status = 3;              // Current status (queued, sent, delivered, failed)
  string provider = 4;            // SMS provider used
  string error = 5;               // Error message if failed
  double cost = 6;                // Cost in provider's currency
  int32 retry_count = 7;          // Number of retry attempts
  int64 created_at = 8;           // Unix timestamp when created
  int64 sent_at = 9;              // Unix timestamp when sent
  int64 delivered_at = 10;        // Unix timestamp when delivered
}

// ListSMSRequest lists SMS messages with filtering
message ListSMSRequest {
  string status = 1;              // Filter by status (optional)
  string recipient = 2;           // Filter by recipient (optional)
  int64 start_date = 3;           // Start date (unix timestamp, optional)
  int64 end_date = 4;             // End date (unix timestamp, optional)
  int32 page = 5;                 // Page number (default: 1)
  int32 page_size = 6;            // Results per page (default: 20)
}

// ListSMSResponse contains list of SMS messages
message ListSMSResponse {
  repeated SMSStatus messages = 1; // List of SMS statuses
  int32 total = 2;                 // Total count of messages
  int32 page = 3;                  // Current page
  int32 page_size = 4;             // Results per page
}
