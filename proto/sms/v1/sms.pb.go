// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: proto/sms/v1/sms.proto

package smsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SendSMSRequest contains data for sending a standard SMS
type SendSMSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`                     // Recipient phone number (E.164 format)
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`           // SMS message content (max 160 chars for single SMS)
	From          string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                 // Sender ID (optional, uses default)
	Jurisdiction  string                 `protobuf:"bytes,4,opt,name=jurisdiction,proto3" json:"jurisdiction,omitempty"` // Jurisdiction code (KE, UG, TZ)
	Priority      int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`        // Message priority (0=normal, 1=high)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSMSRequest) Reset() {
	*x = SendSMSRequest{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSMSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSMSRequest) ProtoMessage() {}

func (x *SendSMSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSMSRequest.ProtoReflect.Descriptor instead.
func (*SendSMSRequest) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{0}
}

func (x *SendSMSRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendSMSRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendSMSRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendSMSRequest) GetJurisdiction() string {
	if x != nil {
		return x.Jurisdiction
	}
	return ""
}

func (x *SendSMSRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// SendOTPRequest sends one-time password
type SendOTPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`                                             // Recipient phone number
	OtpCode       string                 `protobuf:"bytes,2,opt,name=otp_code,json=otpCode,proto3" json:"otp_code,omitempty"`                    // OTP code (usually 6 digits)
	ExpiryMinutes int32                  `protobuf:"varint,3,opt,name=expiry_minutes,json=expiryMinutes,proto3" json:"expiry_minutes,omitempty"` // OTP expiry time in minutes
	Purpose       string                 `protobuf:"bytes,4,opt,name=purpose,proto3" json:"purpose,omitempty"`                                   // Purpose (login, transaction, verification)
	Jurisdiction  string                 `protobuf:"bytes,5,opt,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`                         // Jurisdiction code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendOTPRequest) Reset() {
	*x = SendOTPRequest{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOTPRequest) ProtoMessage() {}

func (x *SendOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOTPRequest.ProtoReflect.Descriptor instead.
func (*SendOTPRequest) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{1}
}

func (x *SendOTPRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendOTPRequest) GetOtpCode() string {
	if x != nil {
		return x.OtpCode
	}
	return ""
}

func (x *SendOTPRequest) GetExpiryMinutes() int32 {
	if x != nil {
		return x.ExpiryMinutes
	}
	return 0
}

func (x *SendOTPRequest) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

func (x *SendOTPRequest) GetJurisdiction() string {
	if x != nil {
		return x.Jurisdiction
	}
	return ""
}

// SendTransactionAlertRequest sends transaction notification
type SendTransactionAlertRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	To              string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`                                                  // Recipient phone number
	TransactionType string                 `protobuf:"bytes,2,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"` // Type (credit, debit, transfer)
	Amount          float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`                                        // Transaction amount
	Currency        string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`                                      // Currency code (KES, UGX, TZS)
	RecipientName   string                 `protobuf:"bytes,5,opt,name=recipient_name,json=recipientName,proto3" json:"recipient_name,omitempty"`       // Recipient name (for transfers)
	Balance         float64                `protobuf:"fixed64,6,opt,name=balance,proto3" json:"balance,omitempty"`                                      // New balance after transaction
	Jurisdiction    string                 `protobuf:"bytes,7,opt,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`                              // Jurisdiction code
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SendTransactionAlertRequest) Reset() {
	*x = SendTransactionAlertRequest{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTransactionAlertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionAlertRequest) ProtoMessage() {}

func (x *SendTransactionAlertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionAlertRequest.ProtoReflect.Descriptor instead.
func (*SendTransactionAlertRequest) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{2}
}

func (x *SendTransactionAlertRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendTransactionAlertRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *SendTransactionAlertRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendTransactionAlertRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SendTransactionAlertRequest) GetRecipientName() string {
	if x != nil {
		return x.RecipientName
	}
	return ""
}

func (x *SendTransactionAlertRequest) GetBalance() float64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *SendTransactionAlertRequest) GetJurisdiction() string {
	if x != nil {
		return x.Jurisdiction
	}
	return ""
}

// SendBulkSMSRequest sends SMS to multiple recipients
type SendBulkSMSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            []string               `protobuf:"bytes,1,rep,name=to,proto3" json:"to,omitempty"`                     // List of recipient phone numbers
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`           // SMS message content
	From          string                 `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                 // Sender ID (optional)
	Jurisdiction  string                 `protobuf:"bytes,4,opt,name=jurisdiction,proto3" json:"jurisdiction,omitempty"` // Jurisdiction code
	Priority      int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`        // Message priority
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendBulkSMSRequest) Reset() {
	*x = SendBulkSMSRequest{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendBulkSMSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBulkSMSRequest) ProtoMessage() {}

func (x *SendBulkSMSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBulkSMSRequest.ProtoReflect.Descriptor instead.
func (*SendBulkSMSRequest) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{3}
}

func (x *SendBulkSMSRequest) GetTo() []string {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *SendBulkSMSRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendBulkSMSRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendBulkSMSRequest) GetJurisdiction() string {
	if x != nil {
		return x.Jurisdiction
	}
	return ""
}

func (x *SendBulkSMSRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// VerifyOTPRequest verifies OTP code
type VerifyOTPRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PhoneNumber   string                 `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"` // Phone number OTP was sent to
	OtpCode       string                 `protobuf:"bytes,2,opt,name=otp_code,json=otpCode,proto3" json:"otp_code,omitempty"`             // OTP code to verify
	Purpose       string                 `protobuf:"bytes,3,opt,name=purpose,proto3" json:"purpose,omitempty"`                            // Purpose (must match original)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyOTPRequest) Reset() {
	*x = VerifyOTPRequest{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyOTPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOTPRequest) ProtoMessage() {}

func (x *VerifyOTPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOTPRequest.ProtoReflect.Descriptor instead.
func (*VerifyOTPRequest) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{4}
}

func (x *VerifyOTPRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *VerifyOTPRequest) GetOtpCode() string {
	if x != nil {
		return x.OtpCode
	}
	return ""
}

func (x *VerifyOTPRequest) GetPurpose() string {
	if x != nil {
		return x.Purpose
	}
	return ""
}

// SendSMSResponse contains result of SMS sending
type SendSMSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Unique message ID from SMS provider
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`                     // Whether SMS was sent successfully
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`                          // Error message if failed
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`                        // SMS status (queued, sent, failed, delivered)
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                 // Unix timestamp of response
	Cost          float64                `protobuf:"fixed64,6,opt,name=cost,proto3" json:"cost,omitempty"`                          // Cost in provider's currency
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendSMSResponse) Reset() {
	*x = SendSMSResponse{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendSMSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSMSResponse) ProtoMessage() {}

func (x *SendSMSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSMSResponse.ProtoReflect.Descriptor instead.
func (*SendSMSResponse) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{5}
}

func (x *SendSMSResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendSMSResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendSMSResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SendSMSResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SendSMSResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *SendSMSResponse) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

// SendBulkSMSResponse contains result of bulk SMS sending
type SendBulkSMSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalSent     int32                  `protobuf:"varint,1,opt,name=total_sent,json=totalSent,proto3" json:"total_sent,omitempty"`       // Total messages sent
	TotalFailed   int32                  `protobuf:"varint,2,opt,name=total_failed,json=totalFailed,proto3" json:"total_failed,omitempty"` // Total messages failed
	Results       []*SMSResult           `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`                             // Individual results per recipient
	TotalCost     float64                `protobuf:"fixed64,4,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`      // Total cost
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendBulkSMSResponse) Reset() {
	*x = SendBulkSMSResponse{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendBulkSMSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBulkSMSResponse) ProtoMessage() {}

func (x *SendBulkSMSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBulkSMSResponse.ProtoReflect.Descriptor instead.
func (*SendBulkSMSResponse) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{6}
}

func (x *SendBulkSMSResponse) GetTotalSent() int32 {
	if x != nil {
		return x.TotalSent
	}
	return 0
}

func (x *SendBulkSMSResponse) GetTotalFailed() int32 {
	if x != nil {
		return x.TotalFailed
	}
	return 0
}

func (x *SendBulkSMSResponse) GetResults() []*SMSResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SendBulkSMSResponse) GetTotalCost() float64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

// SMSResult contains result for individual SMS in bulk send
type SMSResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`                                // Recipient phone number
	MessageId     string                 `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Message ID
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`                     // Success status
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`                          // Error message if failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SMSResult) Reset() {
	*x = SMSResult{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SMSResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSResult) ProtoMessage() {}

func (x *SMSResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSResult.ProtoReflect.Descriptor instead.
func (*SMSResult) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{7}
}

func (x *SMSResult) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SMSResult) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SMSResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SMSResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// VerifyOTPResponse contains OTP verification result
type VerifyOTPResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Valid             bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`                                                  // Whether OTP is valid
	Expired           bool                   `protobuf:"varint,2,opt,name=expired,proto3" json:"expired,omitempty"`                                              // Whether OTP has expired
	Error             string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`                                                   // Error message if verification failed
	AttemptsRemaining int32                  `protobuf:"varint,4,opt,name=attempts_remaining,json=attemptsRemaining,proto3" json:"attempts_remaining,omitempty"` // Remaining verification attempts
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *VerifyOTPResponse) Reset() {
	*x = VerifyOTPResponse{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyOTPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyOTPResponse) ProtoMessage() {}

func (x *VerifyOTPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyOTPResponse.ProtoReflect.Descriptor instead.
func (*VerifyOTPResponse) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{8}
}

func (x *VerifyOTPResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *VerifyOTPResponse) GetExpired() bool {
	if x != nil {
		return x.Expired
	}
	return false
}

func (x *VerifyOTPResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *VerifyOTPResponse) GetAttemptsRemaining() int32 {
	if x != nil {
		return x.AttemptsRemaining
	}
	return 0
}

// SendTemplateSMSRequest sends SMS using a template
type SendTemplateSMSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`                                                                                                                   // Recipient phone number
	From          string                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`                                                                                                               // Sender ID (optional)
	TemplateName  string                 `protobuf:"bytes,3,opt,name=template_name,json=templateName,proto3" json:"template_name,omitempty"`                                                                           // Template identifier
	TemplateData  map[string]string      `protobuf:"bytes,4,rep,name=template_data,json=templateData,proto3" json:"template_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Template variables
	Jurisdiction  string                 `protobuf:"bytes,5,opt,name=jurisdiction,proto3" json:"jurisdiction,omitempty"`                                                                                               // Jurisdiction code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendTemplateSMSRequest) Reset() {
	*x = SendTemplateSMSRequest{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTemplateSMSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTemplateSMSRequest) ProtoMessage() {}

func (x *SendTemplateSMSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTemplateSMSRequest.ProtoReflect.Descriptor instead.
func (*SendTemplateSMSRequest) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{9}
}

func (x *SendTemplateSMSRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendTemplateSMSRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendTemplateSMSRequest) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *SendTemplateSMSRequest) GetTemplateData() map[string]string {
	if x != nil {
		return x.TemplateData
	}
	return nil
}

func (x *SendTemplateSMSRequest) GetJurisdiction() string {
	if x != nil {
		return x.Jurisdiction
	}
	return ""
}

// GetSMSStatusRequest retrieves SMS status
type GetSMSStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Message ID to query
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSMSStatusRequest) Reset() {
	*x = GetSMSStatusRequest{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSMSStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSMSStatusRequest) ProtoMessage() {}

func (x *GetSMSStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSMSStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSMSStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{10}
}

func (x *GetSMSStatusRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// SMSStatus contains SMS delivery status
type SMSStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`         // Unique message ID
	Recipient     string                 `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`                          // Recipient phone number
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                                // Current status (queued, sent, delivered, failed)
	Provider      string                 `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`                            // SMS provider used
	Error         string                 `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`                                  // Error message if failed
	Cost          float64                `protobuf:"fixed64,6,opt,name=cost,proto3" json:"cost,omitempty"`                                  // Cost in provider's currency
	RetryCount    int32                  `protobuf:"varint,7,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`     // Number of retry attempts
	CreatedAt     int64                  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`        // Unix timestamp when created
	SentAt        int64                  `protobuf:"varint,9,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`                 // Unix timestamp when sent
	DeliveredAt   int64                  `protobuf:"varint,10,opt,name=delivered_at,json=deliveredAt,proto3" json:"delivered_at,omitempty"` // Unix timestamp when delivered
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SMSStatus) Reset() {
	*x = SMSStatus{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SMSStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSStatus) ProtoMessage() {}

func (x *SMSStatus) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSStatus.ProtoReflect.Descriptor instead.
func (*SMSStatus) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{11}
}

func (x *SMSStatus) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SMSStatus) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *SMSStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SMSStatus) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *SMSStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SMSStatus) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *SMSStatus) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *SMSStatus) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SMSStatus) GetSentAt() int64 {
	if x != nil {
		return x.SentAt
	}
	return 0
}

func (x *SMSStatus) GetDeliveredAt() int64 {
	if x != nil {
		return x.DeliveredAt
	}
	return 0
}

// ListSMSRequest lists SMS messages with filtering
type ListSMSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                         // Filter by status (optional)
	Recipient     string                 `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`                   // Filter by recipient (optional)
	StartDate     int64                  `protobuf:"varint,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // Start date (unix timestamp, optional)
	EndDate       int64                  `protobuf:"varint,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // End date (unix timestamp, optional)
	Page          int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`                            // Page number (default: 1)
	PageSize      int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`    // Results per page (default: 20)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSMSRequest) Reset() {
	*x = ListSMSRequest{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSMSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSMSRequest) ProtoMessage() {}

func (x *ListSMSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSMSRequest.ProtoReflect.Descriptor instead.
func (*ListSMSRequest) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{12}
}

func (x *ListSMSRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListSMSRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *ListSMSRequest) GetStartDate() int64 {
	if x != nil {
		return x.StartDate
	}
	return 0
}

func (x *ListSMSRequest) GetEndDate() int64 {
	if x != nil {
		return x.EndDate
	}
	return 0
}

func (x *ListSMSRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSMSRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// ListSMSResponse contains list of SMS messages
type ListSMSResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*SMSStatus           `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`                  // List of SMS statuses
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`                       // Total count of messages
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                         // Current page
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // Results per page
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSMSResponse) Reset() {
	*x = ListSMSResponse{}
	mi := &file_proto_sms_v1_sms_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSMSResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSMSResponse) ProtoMessage() {}

func (x *ListSMSResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sms_v1_sms_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSMSResponse.ProtoReflect.Descriptor instead.
func (*ListSMSResponse) Descriptor() ([]byte, []int) {
	return file_proto_sms_v1_sms_proto_rawDescGZIP(), []int{13}
}

func (x *ListSMSResponse) GetMessages() []*SMSStatus {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ListSMSResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSMSResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListSMSResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

var File_proto_sms_v1_sms_proto protoreflect.FileDescriptor

const file_proto_sms_v1_sms_proto_rawDesc = "" +
	"\n" +
	"\x16proto/sms/v1/sms.proto\x12\x06sms.v1\"\x8e\x01\n" +
	"\x0eSendSMSRequest\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04from\x18\x03 \x01(\tR\x04from\x12\"\n" +
	"\fjurisdiction\x18\x04 \x01(\tR\fjurisdiction\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\"\xa0\x01\n" +
	"\x0eSendOTPRequest\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x19\n" +
	"\botp_code\x18\x02 \x01(\tR\aotpCode\x12%\n" +
	"\x0eexpiry_minutes\x18\x03 \x01(\x05R\rexpiryMinutes\x12\x18\n" +
	"\apurpose\x18\x04 \x01(\tR\apurpose\x12\"\n" +
	"\fjurisdiction\x18\x05 \x01(\tR\fjurisdiction\"\xf1\x01\n" +
	"\x1bSendTransactionAlertRequest\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12)\n" +
	"\x10transaction_type\x18\x02 \x01(\tR\x0ftransactionType\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\x12\x1a\n" +
	"\bcurrency\x18\x04 \x01(\tR\bcurrency\x12%\n" +
	"\x0erecipient_name\x18\x05 \x01(\tR\rrecipientName\x12\x18\n" +
	"\abalance\x18\x06 \x01(\x01R\abalance\x12\"\n" +
	"\fjurisdiction\x18\a \x01(\tR\fjurisdiction\"\x92\x01\n" +
	"\x12SendBulkSMSRequest\x12\x0e\n" +
	"\x02to\x18\x01 \x03(\tR\x02to\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x12\n" +
	"\x04from\x18\x03 \x01(\tR\x04from\x12\"\n" +
	"\fjurisdiction\x18\x04 \x01(\tR\fjurisdiction\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\"j\n" +
	"\x10VerifyOTPRequest\x12!\n" +
	"\fphone_number\x18\x01 \x01(\tR\vphoneNumber\x12\x19\n" +
	"\botp_code\x18\x02 \x01(\tR\aotpCode\x12\x18\n" +
	"\apurpose\x18\x03 \x01(\tR\apurpose\"\xaa\x01\n" +
	"\x0fSendSMSResponse\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12\x12\n" +
	"\x04cost\x18\x06 \x01(\x01R\x04cost\"\xa3\x01\n" +
	"\x13SendBulkSMSResponse\x12\x1d\n" +
	"\n" +
	"total_sent\x18\x01 \x01(\x05R\ttotalSent\x12!\n" +
	"\ftotal_failed\x18\x02 \x01(\x05R\vtotalFailed\x12+\n" +
	"\aresults\x18\x03 \x03(\v2\x11.sms.v1.SMSResultR\aresults\x12\x1d\n" +
	"\n" +
	"total_cost\x18\x04 \x01(\x01R\ttotalCost\"j\n" +
	"\tSMSResult\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x1d\n" +
	"\n" +
	"message_id\x18\x02 \x01(\tR\tmessageId\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\x88\x01\n" +
	"\x11VerifyOTPResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x18\n" +
	"\aexpired\x18\x02 \x01(\bR\aexpired\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12-\n" +
	"\x12attempts_remaining\x18\x04 \x01(\x05R\x11attemptsRemaining\"\x9d\x02\n" +
	"\x16SendTemplateSMSRequest\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x12\n" +
	"\x04from\x18\x02 \x01(\tR\x04from\x12#\n" +
	"\rtemplate_name\x18\x03 \x01(\tR\ftemplateName\x12U\n" +
	"\rtemplate_data\x18\x04 \x03(\v20.sms.v1.SendTemplateSMSRequest.TemplateDataEntryR\ftemplateData\x12\"\n" +
	"\fjurisdiction\x18\x05 \x01(\tR\fjurisdiction\x1a?\n" +
	"\x11TemplateDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"4\n" +
	"\x13GetSMSStatusRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\"\xa2\x02\n" +
	"\tSMSStatus\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1c\n" +
	"\trecipient\x18\x02 \x01(\tR\trecipient\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1a\n" +
	"\bprovider\x18\x04 \x01(\tR\bprovider\x12\x14\n" +
	"\x05error\x18\x05 \x01(\tR\x05error\x12\x12\n" +
	"\x04cost\x18\x06 \x01(\x01R\x04cost\x12\x1f\n" +
	"\vretry_count\x18\a \x01(\x05R\n" +
	"retryCount\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\x03R\tcreatedAt\x12\x17\n" +
	"\asent_at\x18\t \x01(\x03R\x06sentAt\x12!\n" +
	"\fdelivered_at\x18\n" +
	" \x01(\x03R\vdeliveredAt\"\xb1\x01\n" +
	"\x0eListSMSRequest\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1c\n" +
	"\trecipient\x18\x02 \x01(\tR\trecipient\x12\x1d\n" +
	"\n" +
	"start_date\x18\x03 \x01(\x03R\tstartDate\x12\x19\n" +
	"\bend_date\x18\x04 \x01(\x03R\aendDate\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"\x87\x01\n" +
	"\x0fListSMSResponse\x12-\n" +
	"\bmessages\x18\x01 \x03(\v2\x11.sms.v1.SMSStatusR\bmessages\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize2\xac\x04\n" +
	"\n" +
	"SMSService\x12:\n" +
	"\aSendSMS\x12\x16.sms.v1.SendSMSRequest\x1a\x17.sms.v1.SendSMSResponse\x12:\n" +
	"\aSendOTP\x12\x16.sms.v1.SendOTPRequest\x1a\x17.sms.v1.SendSMSResponse\x12T\n" +
	"\x14SendTransactionAlert\x12#.sms.v1.SendTransactionAlertRequest\x1a\x17.sms.v1.SendSMSResponse\x12F\n" +
	"\vSendBulkSMS\x12\x1a.sms.v1.SendBulkSMSRequest\x1a\x1b.sms.v1.SendBulkSMSResponse\x12@\n" +
	"\tVerifyOTP\x12\x18.sms.v1.VerifyOTPRequest\x1a\x19.sms.v1.VerifyOTPResponse\x12J\n" +
	"\x0fSendTemplateSMS\x12\x1e.sms.v1.SendTemplateSMSRequest\x1a\x17.sms.v1.SendSMSResponse\x12>\n" +
	"\fGetSMSStatus\x12\x1b.sms.v1.GetSMSStatusRequest\x1a\x11.sms.v1.SMSStatus\x12:\n" +
	"\aListSMS\x12\x16.sms.v1.ListSMSRequest\x1a\x17.sms.v1.ListSMSResponseB6Z4github.com/Cloud9Money/api-protos/proto/sms/v1;smsv1b\x06proto3"

var (
	file_proto_sms_v1_sms_proto_rawDescOnce sync.Once
	file_proto_sms_v1_sms_proto_rawDescData []byte
)

func file_proto_sms_v1_sms_proto_rawDescGZIP() []byte {
	file_proto_sms_v1_sms_proto_rawDescOnce.Do(func() {
		file_proto_sms_v1_sms_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_sms_v1_sms_proto_rawDesc), len(file_proto_sms_v1_sms_proto_rawDesc)))
	})
	return file_proto_sms_v1_sms_proto_rawDescData
}

var file_proto_sms_v1_sms_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_sms_v1_sms_proto_goTypes = []any{
	(*SendSMSRequest)(nil),              // 0: sms.v1.SendSMSRequest
	(*SendOTPRequest)(nil),              // 1: sms.v1.SendOTPRequest
	(*SendTransactionAlertRequest)(nil), // 2: sms.v1.SendTransactionAlertRequest
	(*SendBulkSMSRequest)(nil),          // 3: sms.v1.SendBulkSMSRequest
	(*VerifyOTPRequest)(nil),            // 4: sms.v1.VerifyOTPRequest
	(*SendSMSResponse)(nil),             // 5: sms.v1.SendSMSResponse
	(*SendBulkSMSResponse)(nil),         // 6: sms.v1.SendBulkSMSResponse
	(*SMSResult)(nil),                   // 7: sms.v1.SMSResult
	(*VerifyOTPResponse)(nil),           // 8: sms.v1.VerifyOTPResponse
	(*SendTemplateSMSRequest)(nil),      // 9: sms.v1.SendTemplateSMSRequest
	(*GetSMSStatusRequest)(nil),         // 10: sms.v1.GetSMSStatusRequest
	(*SMSStatus)(nil),                   // 11: sms.v1.SMSStatus
	(*ListSMSRequest)(nil),              // 12: sms.v1.ListSMSRequest
	(*ListSMSResponse)(nil),             // 13: sms.v1.ListSMSResponse
	nil,                                 // 14: sms.v1.SendTemplateSMSRequest.TemplateDataEntry
}
var file_proto_sms_v1_sms_proto_depIdxs = []int32{
	7,  // 0: sms.v1.SendBulkSMSResponse.results:type_name -> sms.v1.SMSResult
	14, // 1: sms.v1.SendTemplateSMSRequest.template_data:type_name -> sms.v1.SendTemplateSMSRequest.TemplateDataEntry
	11, // 2: sms.v1.ListSMSResponse.messages:type_name -> sms.v1.SMSStatus
	0,  // 3: sms.v1.SMSService.SendSMS:input_type -> sms.v1.SendSMSRequest
	1,  // 4: sms.v1.SMSService.SendOTP:input_type -> sms.v1.SendOTPRequest
	2,  // 5: sms.v1.SMSService.SendTransactionAlert:input_type -> sms.v1.SendTransactionAlertRequest
	3,  // 6: sms.v1.SMSService.SendBulkSMS:input_type -> sms.v1.SendBulkSMSRequest
	4,  // 7: sms.v1.SMSService.VerifyOTP:input_type -> sms.v1.VerifyOTPRequest
	9,  // 8: sms.v1.SMSService.SendTemplateSMS:input_type -> sms.v1.SendTemplateSMSRequest
	10, // 9: sms.v1.SMSService.GetSMSStatus:input_type -> sms.v1.GetSMSStatusRequest
	12, // 10: sms.v1.SMSService.ListSMS:input_type -> sms.v1.ListSMSRequest
	5,  // 11: sms.v1.SMSService.SendSMS:output_type -> sms.v1.SendSMSResponse
	5,  // 12: sms.v1.SMSService.SendOTP:output_type -> sms.v1.SendSMSResponse
	5,  // 13: sms.v1.SMSService.SendTransactionAlert:output_type -> sms.v1.SendSMSResponse
	6,  // 14: sms.v1.SMSService.SendBulkSMS:output_type -> sms.v1.SendBulkSMSResponse
	8,  // 15: sms.v1.SMSService.VerifyOTP:output_type -> sms.v1.VerifyOTPResponse
	5,  // 16: sms.v1.SMSService.SendTemplateSMS:output_type -> sms.v1.SendSMSResponse
	11, // 17: sms.v1.SMSService.GetSMSStatus:output_type -> sms.v1.SMSStatus
	13, // 18: sms.v1.SMSService.ListSMS:output_type -> sms.v1.ListSMSResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_proto_sms_v1_sms_proto_init() }
func file_proto_sms_v1_sms_proto_init() {
	if File_proto_sms_v1_sms_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_sms_v1_sms_proto_rawDesc), len(file_proto_sms_v1_sms_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sms_v1_sms_proto_goTypes,
		DependencyIndexes: file_proto_sms_v1_sms_proto_depIdxs,
		MessageInfos:      file_proto_sms_v1_sms_proto_msgTypes,
	}.Build()
	File_proto_sms_v1_sms_proto = out.File
	file_proto_sms_v1_sms_proto_goTypes = nil
	file_proto_sms_v1_sms_proto_depIdxs = nil
}
